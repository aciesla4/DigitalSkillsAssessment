{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Login() {\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  function onSubmit({\n    email,\n    password\n  }, {\n    setSubmitting\n  }) {\n    console.log(email);\n    console.log(password); // alertService.clear();\n    // accountService.login(email, password)\n    //     .then(() => {\n    //         const { from } = location.state || { from: { pathname: \"/level15/jewel\" } };\n    //         history.push(from);\n    //     })\n    //     .catch(error => {\n    //         setSubmitting(false);\n    //         alertService.error(error);\n    //     });\n  }\n\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ({\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    className: errors.email && touched.email ? ' is-invalid' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: \"signin-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, isSubmitting && React.createElement(\"span\", {\n    className: \"spinner-border spinner-border-sm mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"Login\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"forgot-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Forgot Password?\"))))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/Login.js"],"names":["React","Link","Formik","Field","Form","ErrorMessage","Yup","Login","initialValues","email","password","validationSchema","object","shape","string","required","onSubmit","setSubmitting","console","log","errors","touched","isSubmitting","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Login () {\n    const initialValues = {\n        email: '',\n        password: ''\n    };\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required'),\n        password: Yup.string().required('Password is required')\n    });\n\n    function onSubmit({ email, password }, { setSubmitting }) {\n        console.log(email);\n        console.log(password);\n        // alertService.clear();\n        // accountService.login(email, password)\n        //     .then(() => {\n        //         const { from } = location.state || { from: { pathname: \"/level15/jewel\" } };\n        //         history.push(from);\n        //     })\n        //     .catch(error => {\n        //         setSubmitting(false);\n        //         alertService.error(error);\n        //     });\n    }\n\n    return (\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n            {({ errors, touched, isSubmitting }) => (\n                <Form>\n                    <h2 style={{ textAlign: 'center' }}>Login</h2>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <Field name=\"email\" type=\"text\" className={(errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div>\n                            <div>\n                                <button type=\"submit\" disabled={isSubmitting} className=\"signin-btn\">\n                                    {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                    Login\n                                </button>\n                            </div>\n                            <div>\n                                <Link to=\"forgot-password\" >Forgot Password?</Link>\n                            </div>\n                        </div>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}