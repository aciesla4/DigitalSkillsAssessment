{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Login(props) {\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  function onSubmit({\n    email,\n    password\n  }) {\n    props.checkLogin(email, password); // alertService.clear();\n    // accountService.login(email, password)\n    //     .then(() => {\n    //         const { from } = location.state || { from: { pathname: \"/level15/jewel\" } };\n    //         history.push(from);\n    //     })\n    //     .catch(error => {\n    //         setSubmitting(false);\n    //         alertService.error(error);\n    //     });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    open: props.error,\n    autoHideDuration: 5000,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    style: {\n      top: '100px'\n    },\n    onClose: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    severity: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Incorrect Login Credentials\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signin-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"forgot-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Forgot Password?\")))))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/Login.js"],"names":["React","Link","Formik","Field","Form","ErrorMessage","Yup","Snackbar","MuiAlert","Login","props","initialValues","email","password","validationSchema","object","shape","string","required","onSubmit","checkLogin","error","vertical","horizontal","top","handleClose","errors","touched","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Login (props) {\n    const initialValues = {\n        email: '',\n        password: ''\n    };\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required'),\n        password: Yup.string().required('Password is required')\n    });\n\n    function onSubmit({ email, password }) {\n        props.checkLogin(email, password)\n        // alertService.clear();\n        // accountService.login(email, password)\n        //     .then(() => {\n        //         const { from } = location.state || { from: { pathname: \"/level15/jewel\" } };\n        //         history.push(from);\n        //     })\n        //     .catch(error => {\n        //         setSubmitting(false);\n        //         alertService.error(error);\n        //     });\n    }\n\n    return (\n        <div>\n            <Snackbar open={props.error} autoHideDuration={5000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} style={{ top: '100px' }} onClose={props.handleClose}>\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">Incorrect Login Credentials</MuiAlert>\n            </Snackbar>\n            <br/>\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n                {({ errors, touched}) => (\n                    <Form>\n                        <h2 style={{ textAlign: 'center' }}>Login</h2>\n                        <div className=\"card-body\">\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">Email</label>\n                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">Password</label>\n                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div>\n                                <div>\n                                    <button type=\"submit\" className=\"signin-btn\">\n                                        Login\n                                    </button>\n                                </div>\n                                <div>\n                                    <Link to=\"forgot-password\" >Forgot Password?</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}