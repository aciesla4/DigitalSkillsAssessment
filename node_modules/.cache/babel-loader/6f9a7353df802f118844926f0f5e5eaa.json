{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\nexport const alertService = {\n  onAlert,\n  success,\n  error,\n  info,\n  warn,\n  alert,\n  clear\n};\nexport const AlertType = {\n  Success: 'Success',\n  Error: 'Error',\n  Info: 'Info',\n  Warning: 'Warning'\n}; // enable subscribing to alerts observable\n\nfunction onAlert(id = defaultId) {\n  return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n} // convenience methods\n\n\nfunction success(message, options) {\n  alert({ ...options,\n    type: AlertType.Success,\n    message\n  });\n}\n\nfunction error(message, options) {\n  alert({ ...options,\n    type: AlertType.Error,\n    message\n  });\n}\n\nfunction info(message, options) {\n  alert({ ...options,\n    type: AlertType.Info,\n    message\n  });\n}\n\nfunction warn(message, options) {\n  alert({ ...options,\n    type: AlertType.Warning,\n    message\n  });\n} // core alert method\n\n\nfunction alert(alert) {\n  alert.id = alert.id || defaultId;\n  alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\n  alertSubject.next(alert);\n} // clear alerts\n\n\nfunction clear(id = defaultId) {\n  alertSubject.next({\n    id\n  });\n}","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/PasswordReset/_services/alert.service.js"],"names":["Subject","filter","alertSubject","defaultId","alertService","onAlert","success","error","info","warn","alert","clear","AlertType","Success","Error","Info","Warning","id","asObservable","pipe","x","message","options","type","autoClose","undefined","next"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,YAAY,GAAG,IAAIF,OAAJ,EAArB;AACA,MAAMG,SAAS,GAAG,eAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,OADwB;AAExBC,EAAAA,OAFwB;AAGxBC,EAAAA,KAHwB;AAIxBC,EAAAA,IAJwB;AAKxBC,EAAAA,IALwB;AAMxBC,EAAAA,KANwB;AAOxBC,EAAAA;AAPwB,CAArB;AAUP,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,OAAO,EAAE,SADY;AAErBC,EAAAA,KAAK,EAAE,OAFc;AAGrBC,EAAAA,IAAI,EAAE,MAHe;AAIrBC,EAAAA,OAAO,EAAE;AAJY,CAAlB,C,CAOP;;AACA,SAASX,OAAT,CAAiBY,EAAE,GAAGd,SAAtB,EAAiC;AAC7B,SAAOD,YAAY,CAACgB,YAAb,GAA4BC,IAA5B,CAAiClB,MAAM,CAACmB,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAApB,CAAvC,CAAP;AACH,C,CAED;;;AACA,SAASX,OAAT,CAAiBe,OAAjB,EAA0BC,OAA1B,EAAmC;AAC/BZ,EAAAA,KAAK,CAAC,EAAE,GAAGY,OAAL;AAAcC,IAAAA,IAAI,EAAEX,SAAS,CAACC,OAA9B;AAAuCQ,IAAAA;AAAvC,GAAD,CAAL;AACH;;AAED,SAASd,KAAT,CAAec,OAAf,EAAwBC,OAAxB,EAAiC;AAC7BZ,EAAAA,KAAK,CAAC,EAAE,GAAGY,OAAL;AAAcC,IAAAA,IAAI,EAAEX,SAAS,CAACE,KAA9B;AAAqCO,IAAAA;AAArC,GAAD,CAAL;AACH;;AAED,SAASb,IAAT,CAAca,OAAd,EAAuBC,OAAvB,EAAgC;AAC5BZ,EAAAA,KAAK,CAAC,EAAE,GAAGY,OAAL;AAAcC,IAAAA,IAAI,EAAEX,SAAS,CAACG,IAA9B;AAAoCM,IAAAA;AAApC,GAAD,CAAL;AACH;;AAED,SAASZ,IAAT,CAAcY,OAAd,EAAuBC,OAAvB,EAAgC;AAC5BZ,EAAAA,KAAK,CAAC,EAAE,GAAGY,OAAL;AAAcC,IAAAA,IAAI,EAAEX,SAAS,CAACI,OAA9B;AAAuCK,IAAAA;AAAvC,GAAD,CAAL;AACH,C,CAED;;;AACA,SAASX,KAAT,CAAeA,KAAf,EAAsB;AAClBA,EAAAA,KAAK,CAACO,EAAN,GAAWP,KAAK,CAACO,EAAN,IAAYd,SAAvB;AACAO,EAAAA,KAAK,CAACc,SAAN,GAAmBd,KAAK,CAACc,SAAN,KAAoBC,SAApB,GAAgC,IAAhC,GAAuCf,KAAK,CAACc,SAAhE;AACAtB,EAAAA,YAAY,CAACwB,IAAb,CAAkBhB,KAAlB;AACH,C,CAED;;;AACA,SAASC,KAAT,CAAeM,EAAE,GAAGd,SAApB,EAA+B;AAC3BD,EAAAA,YAAY,CAACwB,IAAb,CAAkB;AAAET,IAAAA;AAAF,GAAlB;AACH","sourcesContent":["import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\n\nexport const alertService = {\n    onAlert,\n    success,\n    error,\n    info,\n    warn,\n    alert,\n    clear\n};\n\nexport const AlertType = {\n    Success: 'Success',\n    Error: 'Error',\n    Info: 'Info',\n    Warning: 'Warning'\n}\n\n// enable subscribing to alerts observable\nfunction onAlert(id = defaultId) {\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n}\n\n// convenience methods\nfunction success(message, options) {\n    alert({ ...options, type: AlertType.Success, message });\n}\n\nfunction error(message, options) {\n    alert({ ...options, type: AlertType.Error, message });\n}\n\nfunction info(message, options) {\n    alert({ ...options, type: AlertType.Info, message });\n}\n\nfunction warn(message, options) {\n    alert({ ...options, type: AlertType.Warning, message });\n}\n\n// core alert method\nfunction alert(alert) {\n    alert.id = alert.id || defaultId;\n    alert.autoClose = (alert.autoClose === undefined ? true : alert.autoClose);\n    alertSubject.next(alert);\n}\n\n// clear alerts\nfunction clear(id = defaultId) {\n    alertSubject.next({ id });\n}\n"]},"metadata":{},"sourceType":"module"}