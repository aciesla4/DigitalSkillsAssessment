{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nconst initialValues = {\n  email: '',\n  password: ''\n};\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Email is invalid').required('Email is required'),\n  password: Yup.string().required('Password is required')\n});\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        error: false\n      });\n    };\n\n    this.onSubmit = ({\n      email,\n      password\n    }) => {\n      axios.get('http://localhost:5050/user').then(response => {\n        if (email === response.data.email && password === response.data.password) {\n          console.log(\"woohoo\");\n        } else {\n          this.setState({\n            error: true\n          });\n        }\n      }); // alertService.clear();\n      // accountService.login(email, password)\n      //     .then(() => {\n      //         const { from } = location.state || { from: { pathname: \"/level15/jewel\" } };\n      //         history.push(from);\n      //     })\n      //     .catch(error => {\n      //         setSubmitting(false);\n      //         alertService.error(error);\n      //     });\n    };\n\n    this.state = {\n      error: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      open: this.state.error,\n      autoHideDuration: 5000,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      style: {\n        top: '100px'\n      },\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Incorrect Login Credentials\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, ({\n      errors,\n      touched\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"signin-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      onClick: this.props.changeView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Forgot Password?\")))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/Login.js"],"names":["React","Link","Formik","Field","Form","ErrorMessage","Yup","Snackbar","MuiAlert","axios","initialValues","email","password","validationSchema","object","shape","string","required","Login","Component","constructor","props","handleClose","setState","error","onSubmit","get","then","response","data","console","log","state","render","vertical","horizontal","top","errors","touched","textAlign","changeView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\n\nconst initialValues = { email: '', password: ''};\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required'),\n    password: Yup.string().required('Password is required')\n});\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: false\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            error: false\n        })\n    }\n\n    onSubmit = ({ email, password }) => {\n        axios.get('http://localhost:5050/user')\n            .then((response) => {\n                if (email === response.data.email && password === response.data.password) {\n                    console.log(\"woohoo\")\n                }\n                else {\n                    this.setState({\n                        error: true\n                    })\n                }\n            });\n        // alertService.clear();\n        // accountService.login(email, password)\n        //     .then(() => {\n        //         const { from } = location.state || { from: { pathname: \"/level15/jewel\" } };\n        //         history.push(from);\n        //     })\n        //     .catch(error => {\n        //         setSubmitting(false);\n        //         alertService.error(error);\n        //     });\n    }\n\n    render () {\n        return (\n            <div>\n                <Snackbar open={this.state.error} autoHideDuration={5000}\n                          anchorOrigin={{vertical: 'top', horizontal: 'right'}} style={{top: '100px'}}\n                          onClose={this.handleClose}>\n                    <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">Incorrect Login Credentials</MuiAlert>\n                </Snackbar>\n                <br/>\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={this.onSubmit}>\n                    {({errors, touched}) => (\n                        <Form>\n                            <h2 style={{textAlign: 'center'}}>Login</h2>\n                            <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                    <label className=\"form-label\">Email</label>\n                                    <Field name=\"email\" type=\"text\"\n                                           className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')}/>\n                                    <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label className=\"form-label\">Password</label>\n                                    <Field name=\"password\" type=\"password\"\n                                           className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')}/>\n                                    <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\"/>\n                                </div>\n                                <div>\n                                    <div>\n                                        <button type=\"submit\" className=\"signin-btn\">\n                                            Login\n                                        </button>\n                                    </div>\n                                    <div>\n                                        <a href=\"\" onClick={this.props.changeView}>Forgot Password?</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}