{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ResetPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nconst initialValues = {\n  password: '',\n  confirmPassword: ''\n};\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n});\n\nclass ResetPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = ({\n      password,\n      confirmPassword\n    }) => {\n      console.log(password, confirmPassword); // alertService.clear();\n      // accountService.resetPassword({ token, password, confirmPassword })\n      //     .then(() => {\n      //         alertService.success('Password reset successful, you can now login', { keepAfterRouteChange: true });\n      //         history.push('login');\n      //     })\n      //     .catch(error => {\n      //         setSubmitting(false);\n      //         alertService.error(error);\n      //     });\n    };\n  }\n\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, ({\n      errors,\n      touched,\n      isSubmitting\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Field, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      className: 'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"confirmPassword\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, isSubmitting && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \"Reset Password\"), React.createElement(Link, {\n      to: \"/login\",\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ResetPassword.js"],"names":["React","useState","useEffect","Link","queryString","Formik","Field","Form","ErrorMessage","Yup","initialValues","password","confirmPassword","validationSchema","object","shape","string","min","required","oneOf","ref","ResetPassword","Component","onSubmit","console","log","render","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\"; \n\nconst initialValues = {\n    password: '',\n    confirmPassword: ''\n};\n\nconst validationSchema = Yup.object().shape({\n    password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm Password is required'),\n});\n\nclass ResetPassword extends React.Component {\n\n    onSubmit = ({ password, confirmPassword }) => {\n        console.log(password, confirmPassword);\n            // alertService.clear();\n            // accountService.resetPassword({ token, password, confirmPassword })\n            //     .then(() => {\n            //         alertService.success('Password reset successful, you can now login', { keepAfterRouteChange: true });\n            //         history.push('login');\n            //     })\n            //     .catch(error => {\n            //         setSubmitting(false);\n            //         alertService.error(error);\n            //     });\n    }\n\n    render() {\n        return (\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={this.onSubmit}>\n                {({errors, touched, isSubmitting}) => (\n                    <Form>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <Field name=\"password\" type=\"password\"\n                                   className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')}/>\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm Password</label>\n                            <Field name=\"confirmPassword\" type=\"password\"\n                                   className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')}/>\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col\">\n                                <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\n                                    {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                    Reset Password\n                                </button>\n                                <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\n                            </div>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        );\n    }\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}