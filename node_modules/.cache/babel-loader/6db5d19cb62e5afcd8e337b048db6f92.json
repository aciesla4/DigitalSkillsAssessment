{"ast":null,"code":"import _classCallCheck from\"/Users/z0041gm/school/DigitalSkillsAssessment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/z0041gm/school/DigitalSkillsAssessment/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/z0041gm/school/DigitalSkillsAssessment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/z0041gm/school/DigitalSkillsAssessment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/z0041gm/school/DigitalSkillsAssessment/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Formik,Field,Form,ErrorMessage}from'formik';import*as Yup from'yup';import\"../css/Level15.css\";import axios from\"axios\";import MuiAlert from\"@material-ui/lab/Alert\";import Snackbar from\"@material-ui/core/Snackbar\";var initialValues={password:'',confirmPassword:''};var validationSchema=Yup.object().shape({password:Yup.string().min(6,'Password must be at least 6 characters').required('Password is required'),confirmPassword:Yup.string().oneOf([Yup.ref('password'),null],'Passwords must match').required('Confirm Password is required')});var ResetPassword=/*#__PURE__*/function(_React$Component){_inherits(ResetPassword,_React$Component);function ResetPassword(props){var _this;_classCallCheck(this,ResetPassword);_this=_possibleConstructorReturn(this,_getPrototypeOf(ResetPassword).call(this,props));_this.handleClose=function(){_this.setState({success:false});_this.props.changeView('resetToLogin');};_this.onSubmit=function(_ref){var password=_ref.password,confirmPassword=_ref.confirmPassword;axios.post('https://digital-skills-json-server.herokuapp.com/user',{id:1,email:'agent203@spyacademy.org',password:password}).then(function(response){if(response.status==201){_this.setState({success:true});}});};_this.state={success:false};return _this;}_createClass(ResetPassword,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Snackbar,{open:this.state.success,autoHideDuration:4000,anchorOrigin:{vertical:'top',horizontal:'right'},style:{top:'100px'},onClose:this.handleClose},React.createElement(MuiAlert,{elevation:6,variant:\"filled\",severity:\"success\"},\"Password Reset Successful! Redirecting to Login Page...\")),React.createElement(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:this.onSubmit},function(_ref2){var errors=_ref2.errors,touched=_ref2.touched;return React.createElement(Form,null,React.createElement(\"br\",null),React.createElement(\"h2\",{style:{textAlign:'center'}},\"Reset Password\"),React.createElement(\"div\",{className:\"card-body\"},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",null,\"Password\"),React.createElement(Field,{name:\"password\",type:\"password\",className:'form-control'+(errors.password&&touched.password?' is-invalid':'')}),React.createElement(ErrorMessage,{name:\"password\",component:\"div\",className:\"invalid-feedback\"})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",null,\"Confirm Password\"),React.createElement(Field,{name:\"confirmPassword\",type:\"password\",className:'form-control'+(errors.confirmPassword&&touched.confirmPassword?' is-invalid':'')}),React.createElement(ErrorMessage,{name:\"confirmPassword\",component:\"div\",className:\"invalid-feedback\"})),React.createElement(\"div\",{className:\"form-row\"},React.createElement(\"div\",{className:\"form-group col\"},React.createElement(\"button\",{type:\"submit\",className:\"submit-btn\"},\"Reset Password\"),React.createElement(\"a\",{href:\"javascript:void(0)\",onClick:function onClick(){return _this2.props.changeView('resetToLogin');}},\"Cancel\")))));}));}}]);return ResetPassword;}(React.Component);export default ResetPassword;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ResetPassword.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","axios","MuiAlert","Snackbar","initialValues","password","confirmPassword","validationSchema","object","shape","string","min","required","oneOf","ref","ResetPassword","props","handleClose","setState","success","changeView","onSubmit","post","id","email","then","response","status","state","vertical","horizontal","top","errors","touched","textAlign","Component"],"mappings":"8oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,CAA8BC,YAA9B,KAAkD,QAAlD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,QAAQ,CAAE,EADQ,CAElBC,eAAe,CAAE,EAFC,CAAtB,CAKA,GAAMC,CAAAA,gBAAgB,CAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB,CACxCJ,QAAQ,CAAEL,GAAG,CAACU,MAAJ,GACLC,GADK,CACD,CADC,CACE,wCADF,EAELC,QAFK,CAEI,sBAFJ,CAD8B,CAIxCN,eAAe,CAAEN,GAAG,CAACU,MAAJ,GACZG,KADY,CACN,CAACb,GAAG,CAACc,GAAJ,CAAQ,UAAR,CAAD,CAAsB,IAAtB,CADM,CACuB,sBADvB,EAEZF,QAFY,CAEH,8BAFG,CAJuB,CAAnB,CAAzB,C,GASMG,CAAAA,a,mFACF,uBAAYC,KAAZ,CAAmB,+CACf,+EAAMA,KAAN,GADe,MAOnBC,WAPmB,CAOL,UAAM,CAChB,MAAKC,QAAL,CAAc,CACVC,OAAO,CAAE,KADC,CAAd,EAGA,MAAKH,KAAL,CAAWI,UAAX,CAAsB,cAAtB,EACH,CAZkB,OAcnBC,QAdmB,CAcR,cAAmC,IAAhChB,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,eAAsB,MAAtBA,eAAsB,CAC1CL,KAAK,CAACqB,IAAN,CAAW,uDAAX,CACI,CAAEC,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,yBAAhB,CAA2CnB,QAAQ,CAAEA,QAArD,CADJ,EAEKoB,IAFL,CAEU,SAACC,QAAD,CAAc,CAChB,GAAIA,QAAQ,CAACC,MAAT,EAAmB,GAAvB,CAA4B,CACxB,MAAKT,QAAL,CAAc,CACVC,OAAO,CAAE,IADC,CAAd,EAGH,CACJ,CARL,EASH,CAxBkB,CAEf,MAAKS,KAAL,CAAa,CACTT,OAAO,CAAE,KADA,CAAb,CAFe,aAKlB,C,iEAqBQ,iBACL,MACI,gCACI,oBAAC,QAAD,EAAU,IAAI,CAAE,KAAKS,KAAL,CAAWT,OAA3B,CAAoC,gBAAgB,CAAE,IAAtD,CACU,YAAY,CAAE,CAACU,QAAQ,CAAE,KAAX,CAAkBC,UAAU,CAAE,OAA9B,CADxB,CACgE,KAAK,CAAE,CAACC,GAAG,CAAE,OAAN,CADvE,CAEU,OAAO,CAAE,KAAKd,WAFxB,EAGI,oBAAC,QAAD,EAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,CAAyC,QAAQ,CAAC,SAAlD,4DAHJ,CADJ,CAMI,oBAAC,MAAD,EAAQ,aAAa,CAAEb,aAAvB,CAAsC,gBAAgB,CAAEG,gBAAxD,CAA0E,QAAQ,CAAE,KAAKc,QAAzF,EACK,mBAAEW,CAAAA,MAAF,OAAEA,MAAF,CAAUC,OAAV,OAAUA,OAAV,OACG,qBAAC,IAAD,MACI,8BADJ,CAEI,0BAAI,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAX,mBAFJ,CAGI,2BAAK,SAAS,CAAC,WAAf,EACI,2BAAK,SAAS,CAAC,YAAf,EACI,4CADJ,CAEI,oBAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,IAAI,CAAC,UAA5B,CACO,SAAS,CAAE,gBAAkBF,MAAM,CAAC3B,QAAP,EAAmB4B,OAAO,CAAC5B,QAA3B,CAAsC,aAAtC,CAAsD,EAAxE,CADlB,EAFJ,CAII,oBAAC,YAAD,EAAc,IAAI,CAAC,UAAnB,CAA8B,SAAS,CAAC,KAAxC,CAA8C,SAAS,CAAC,kBAAxD,EAJJ,CADJ,CAOI,2BAAK,SAAS,CAAC,YAAf,EACI,oDADJ,CAEI,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,IAAI,CAAC,UAAnC,CACO,SAAS,CAAE,gBAAkB2B,MAAM,CAAC1B,eAAP,EAA0B2B,OAAO,CAAC3B,eAAlC,CAAoD,aAApD,CAAoE,EAAtF,CADlB,EAFJ,CAII,oBAAC,YAAD,EAAc,IAAI,CAAC,iBAAnB,CAAqC,SAAS,CAAC,KAA/C,CAAqD,SAAS,CAAC,kBAA/D,EAJJ,CAPJ,CAaI,2BAAK,SAAS,CAAC,UAAf,EACI,2BAAK,SAAS,CAAC,gBAAf,EACI,8BAAQ,IAAI,CAAC,QAAb,CAAuB,SAAS,CAAC,YAAjC,mBADJ,CAII,yBAAG,IAAI,CAAC,oBAAR,CAA6B,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACU,KAAL,CAAWI,UAAX,CAAsB,cAAtB,CAAN,EAAtC,WAJJ,CADJ,CAbJ,CAHJ,CADH,EADL,CANJ,CADJ,CAuCH,C,2BAnEuBzB,KAAK,CAACwC,S,EAsElC,cAAepB,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport axios from \"axios\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst initialValues = {\n    password: '',\n    confirmPassword: ''\n};\n\nconst validationSchema = Yup.object().shape({\n    password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm Password is required'),\n});\n\nclass ResetPassword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            success: false\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            success: false\n        })\n        this.props.changeView('resetToLogin')\n    }\n\n    onSubmit = ({ password, confirmPassword }) => {\n        axios.post('https://digital-skills-json-server.herokuapp.com/user',\n            { id: 1, email: 'agent203@spyacademy.org', password: password})\n            .then((response) => {\n                if (response.status == 201) {\n                    this.setState({\n                        success: true,\n                    })\n                }\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <Snackbar open={this.state.success} autoHideDuration={4000}\n                          anchorOrigin={{vertical: 'top', horizontal: 'right'}} style={{top: '100px'}}\n                          onClose={this.handleClose}>\n                    <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">Password Reset Successful! Redirecting to Login Page...</MuiAlert>\n                </Snackbar>\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={this.onSubmit}>\n                    {({errors, touched}) => (\n                        <Form>\n                            <br/>\n                            <h2 style={{ textAlign: 'center' }}>Reset Password</h2>\n                            <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <Field name=\"password\" type=\"password\"\n                                           className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')}/>\n                                    <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Confirm Password</label>\n                                    <Field name=\"confirmPassword\" type=\"password\"\n                                           className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')}/>\n                                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\"/>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col\">\n                                        <button type=\"submit\"  className=\"submit-btn\">\n                                            Reset Password\n                                        </button>\n                                        <a href='javascript:void(0)' onClick={() => this.props.changeView('resetToLogin')}>Cancel</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}