{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/LearningMode.js\";\nimport React from 'react';\nimport '../css/Modal.css';\nimport Modal from \"../util/Modal\";\n\nclass LearningMode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openNextHome = (index, e) => {\n      this.props.logClick(e);\n      let update = this.state.home;\n      update[index] = false;\n      update[index + 1] = true;\n      this.setState({\n        home: update\n      });\n    };\n\n    this.closeHome = e => {\n      this.props.logClick(e);\n      let update = this.state.home;\n      let length = this.state.home.length;\n      update[length - 1] = false;\n      this.setState({\n        home: update\n      });\n    };\n\n    this.openNextLevel1 = (index, e) => {\n      this.props.logClick(e);\n      let update = this.state.level1;\n      update[index] = false;\n      update[index + 1] = true;\n      this.setState({\n        level1: update\n      });\n    };\n\n    this.closeLevel1 = e => {\n      this.props.logClick(e);\n      let update = this.state.level1;\n      let length = this.state.level1.length;\n      update[length - 1] = false;\n      this.setState({\n        level1: update\n      });\n    };\n\n    this.closeLevel2 = () => {\n      let update = this.state.level2;\n      let length = this.state.level2.length;\n      update[length - 1] = false;\n      this.setState({\n        level2: update\n      });\n    };\n\n    let open = this.props.academicmode;\n    this.state = {\n      home: [open, false, false],\n      level1: [open, false],\n      level2: [open]\n    };\n  }\n\n  render() {\n    const currentPath = window.location.pathname;\n    const len = currentPath.length;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, currentPath.includes(\"home\") && React.createElement(\"div\", {\n      id: \"home\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.home[0],\n      heading: \"Learning Mode\",\n      openNext: e => this.openNextHome(0, e),\n      x: \"0\",\n      y: \"15%\",\n      modalStyle: \"modalL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Click the slider to turn learning mode off or on. Learning mode gives you extra tips on how to use the site and complete levels.\"), React.createElement(Modal, {\n      show: this.state.home[1],\n      heading: \"Check Button\",\n      openNext: e => this.openNextHome(1, e),\n      x: \"40%\",\n      y: \"15%\",\n      modalStyle: \"my-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Click this button to begin a level.\"), React.createElement(Modal, {\n      show: this.state.home[2],\n      last: true,\n      heading: \"Phone Button\",\n      closeModal: this.closeHome,\n      y: \"15%\",\n      modalStyle: \"modalR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"When this rings, HQ is calling. Click to pick it up and receive their message.\")), currentPath.substring(len - 6) === 'level1' && React.createElement(\"div\", {\n      id: \"level1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.level1[0],\n      heading: \"Home Button\",\n      openNext: e => this.openNextLevel1(0, e),\n      x: \"40%\",\n      y: \"15%\",\n      modalStyle: \"my-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Click this button to return to the home page.\"), React.createElement(Modal, {\n      show: this.state.level1[1],\n      last: true,\n      heading: \"Question Button\",\n      closeModal: this.closeLevel1,\n      x: \"75%\",\n      y: \"15%\",\n      modalStyle: \"modalR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Click this button to get a hint on how to complete the level.\")), currentPath.includes(\"level2\") && React.createElement(\"div\", {\n      id: \"level2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.level2[0],\n      last: true,\n      heading: \"Hint\",\n      closeModal: this.closeLevel2,\n      x: \"75%\",\n      y: \"15%\",\n      modalStyle: \"modalR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Pop ups can be closed by clicking the X in the top right corner.\")));\n  }\n\n}\n\nexport default LearningMode;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/LearningMode.js"],"names":["React","Modal","LearningMode","Component","constructor","props","openNextHome","index","e","logClick","update","state","home","setState","closeHome","length","openNextLevel1","level1","closeLevel1","closeLevel2","level2","open","academicmode","render","currentPath","window","location","pathname","len","includes","width","substring"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../css/Modal.css';\nimport Modal from \"../util/Modal\";\n\nclass LearningMode extends React.Component {\n    constructor(props){\n        super(props)\n        let open = this.props.academicmode;\n        this.state = {\n            home: [open, false, false],\n            level1: [open, false],\n            level2: [open],\n        }\n    }\n\n    openNextHome = (index, e) => {\n        this.props.logClick(e);\n        let update = this.state.home;\n        update[index] = false;\n        update[index+1] = true;\n        this.setState({\n            home: update\n        });\n    };\n\n    closeHome = (e) => {\n        this.props.logClick(e);\n        let update = this.state.home;\n        let length = this.state.home.length;\n        update[length-1] = false;\n        this.setState({\n            home: update\n        });\n    };\n\n    openNextLevel1 = (index, e) => {\n        this.props.logClick(e);\n        let update = this.state.level1;\n        update[index] = false;\n        update[index+1] = true;\n        this.setState({\n            level1: update\n        });\n    };\n\n    closeLevel1 = (e) => {\n        this.props.logClick(e);\n        let update = this.state.level1;\n        let length = this.state.level1.length;\n        update[length-1] = false;\n        this.setState({\n            level1: update\n        });\n    };\n\n    closeLevel2 = () => {\n        let update = this.state.level2;\n        let length = this.state.level2.length;\n        update[length-1] = false;\n        this.setState({\n            level2: update\n        });\n    };\n\n    render() {\n        const currentPath = window.location.pathname;\n        const len = currentPath.length;\n        return (\n            <div>\n                {currentPath.includes(\"home\") &&\n                    <div id=\"home\" style={{ width: '100%' }}>\n                        <Modal show={this.state.home[0]} heading=\"Learning Mode\" openNext={(e) => this.openNextHome( 0, e)} x=\"0\" y=\"15%\" modalStyle=\"modalL\">\n                            Click the slider to turn learning mode off or on. Learning mode gives you extra tips on how to use the site and complete levels.\n                        </Modal>\n                        <Modal show={this.state.home[1]} heading=\"Check Button\" openNext={(e) => this.openNextHome(1, e)} x=\"40%\" y=\"15%\" modalStyle=\"my-modal\">\n                            Click this button to begin a level.\n                        </Modal>\n                        <Modal show={this.state.home[2]} last={true} heading=\"Phone Button\" closeModal={this.closeHome} y=\"15%\" modalStyle=\"modalR\">\n                            When this rings, HQ is calling. Click to pick it up and receive their message.\n                        </Modal>\n                    </div>\n                }\n                {currentPath.substring(len - 6) === 'level1' &&\n                    <div id=\"level1\">\n                        <Modal show={this.state.level1[0]} heading=\"Home Button\" openNext={(e) => this.openNextLevel1(0, e)} x=\"40%\" y=\"15%\" modalStyle=\"my-modal\">\n                            Click this button to return to the home page.\n                        </Modal>\n                        <Modal show={this.state.level1[1]} last={true} heading=\"Question Button\" closeModal={this.closeLevel1} x=\"75%\" y=\"15%\" modalStyle=\"modalR\">\n                            Click this button to get a hint on how to complete the level.\n                        </Modal>\n                    </div>\n                }\n                {currentPath.includes(\"level2\") &&\n                    <div id=\"level2\">\n                        <Modal show={this.state.level2[0]} last={true} heading=\"Hint\" closeModal={this.closeLevel2} x=\"75%\" y=\"15%\" modalStyle=\"modalR\">\n                            Pop ups can be closed by clicking the X in the top right corner.\n                        </Modal>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default LearningMode;\n\n\n\n"]},"metadata":{},"sourceType":"module"}