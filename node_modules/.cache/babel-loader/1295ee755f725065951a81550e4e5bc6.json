{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ForgotPassword.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport axios from \"axios\";\nconst initialValues = {\n  email: ''\n};\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Email is invalid').required('Email is required')\n});\n\nclass ForgotPassword extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmit = ({\n      email\n    }) => {\n      axios.post('https://digital-skills-json-server.herokuapp.com/user', {\n        email: email\n      }).then(response => {\n        this.setState({\n          showResetLink: true,\n          resetLink: response.data\n        });\n      });\n      this.setState({\n        success: true\n      });\n    };\n\n    this.handleClickReset = () => {\n      axios.get('https://digital-skills-json-server.herokuapp.com/user' + this.state.resetLink).then(response => {\n        if (response.status == 200) {\n          this.props.changeView(\"resetPassword\");\n        } else {\n          console.log(\"error\");\n        }\n      });\n    };\n\n    this.state = {\n      showResetLink: false,\n      resetLink: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, ({\n      errors,\n      touched\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Forgot Password\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"javascript:void(0)\",\n      onClick: () => this.props.changeView('forgotPassword'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Cancel\")))))), this.state.showResetLink && React.createElement(\"div\", {\n      className: \"reset-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"reset-btn\",\n      onClick: this.handleClickReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Reset Your Password Here\")));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ForgotPassword.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","axios","initialValues","email","validationSchema","object","shape","string","required","ForgotPassword","Component","constructor","onSubmit","post","then","response","setState","showResetLink","resetLink","data","success","handleClickReset","get","state","status","props","changeView","console","log","render","errors","touched","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport axios from \"axios\";\n\nconst initialValues = {\n    email: ''\n};\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required')\n});\n\nclass ForgotPassword extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showResetLink: false,\n            resetLink: '',\n        }\n    }\n\n    onSubmit = ({ email }) => {\n        axios.post('https://digital-skills-json-server.herokuapp.com/user', {email: email})\n            .then((response) => {\n                this.setState({\n                    showResetLink: true,\n                    resetLink: response.data\n                })\n            });\n        this.setState({\n            success: true,\n        })\n    }\n\n    handleClickReset = () => {\n        axios.get('https://digital-skills-json-server.herokuapp.com/user' + this.state.resetLink).then(response => {\n            if (response.status == 200) {\n                this.props.changeView(\"resetPassword\")\n            }\n            else {\n                console.log(\"error\")\n            }\n        })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={this.onSubmit}>\n                    {({errors, touched}) => (\n                        <Form>\n                            <br/>\n                            <h2 style={{textAlign: 'center'}}>Forgot Password</h2>\n                            <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <Field name=\"email\" type=\"text\"\n                                           className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')}/>\n                                    <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\"/>\n                                </div>\n                                <div>\n                                    <div>\n                                        <button type=\"submit\" className=\"submit-btn\">\n                                            Submit\n                                        </button>\n                                    </div>\n                                    <div>\n                                        <a href='javascript:void(0)' onClick={() => this.props.changeView('forgotPassword')}>Cancel</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n                {this.state.showResetLink && (\n                    <div className=\"reset-container\">\n                        <button className=\"reset-btn\" onClick={this.handleClickReset}>Reset Your Password Here</button>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}