{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ForgotPassword.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\n\nfunction ForgotPassword(props) {\n  const initialValues = {\n    email: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Email is invalid').required('Email is required')\n  });\n\n  function onSubmit({\n    email\n  }) {\n    console.log(\"forgot password submit\"); // alertService.clear();\n    // accountService.forgotPassword(email)\n    //     .then(() => alertService.success('Please check your email for password reset instructions'))\n    //     .catch(error => alertService.error(error))\n    //     .finally(() => setSubmitting(false));\n  }\n\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Forgot Password\"), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signin-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: props.changeView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Cancel\"))))));\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ForgotPassword.js"],"names":["React","Link","Formik","Field","Form","ErrorMessage","Yup","ForgotPassword","props","initialValues","email","validationSchema","object","shape","string","required","onSubmit","console","log","errors","touched","textAlign","changeView"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,oBAAP;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE;AADW,GAAtB;AAIA,QAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACxCH,IAAAA,KAAK,EAAEJ,GAAG,CAACQ,MAAJ,GACFJ,KADE,CACI,kBADJ,EAEFK,QAFE,CAEO,mBAFP;AADiC,GAAnB,CAAzB;;AAMA,WAASC,QAAT,CAAkB;AAAEN,IAAAA;AAAF,GAAlB,EAA6B;AACzBO,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EADyB,CAEzB;AACA;AACA;AACA;AACA;AACH;;AAED,SACI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAET,aAAvB;AAAsC,IAAA,gBAAgB,EAAEE,gBAAxD;AAA0E,IAAA,QAAQ,EAAEK,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,SAAS,EAAE,kBAAkBF,MAAM,CAACT,KAAP,IAAgBU,OAAO,CAACV,KAAxB,GAAgC,aAAhC,GAAgD,EAAlE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAC,KAArC;AAA2C,IAAA,SAAS,EAAC,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,oBAAR;AAA6B,IAAA,OAAO,EAAEF,KAAK,CAACc,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CANJ,CANJ,CAHJ,CAFR,CADJ;AA4BH;;AAED,eAAef,cAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\n\nfunction ForgotPassword(props) {\n    const initialValues = {\n        email: ''\n    };\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required')\n    });\n\n    function onSubmit({ email }) {\n        console.log(\"forgot password submit\")\n        // alertService.clear();\n        // accountService.forgotPassword(email)\n        //     .then(() => alertService.success('Please check your email for password reset instructions'))\n        //     .catch(error => alertService.error(error))\n        //     .finally(() => setSubmitting(false));\n    }\n\n    return (\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n            {({ errors, touched}) => (\n                <Form>\n                    <br/>\n                    <h2 style={{ textAlign: 'center' }}>Forgot Password</h2>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div>\n                            <div>\n                                <button type=\"submit\" className=\"signin-btn\">\n                                    Submit\n                                </button>\n                            </div>\n                            <div>\n                                <a href='javascript:void(0)' onClick={props.changeView}>Cancel</a>\n                            </div>\n                        </div>\n\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}