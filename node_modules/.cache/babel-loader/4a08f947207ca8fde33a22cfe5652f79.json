{"ast":null,"code":"import _slicedToArray from\"/Users/z0041gm/school/DigitalSkillsAssessment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import TableSortLabel from'@material-ui/core/TableSortLabel';import Paper from'@material-ui/core/Paper';function createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData('Cupcake',305,3.7,67,4.3),createData('Donut',452,25.0,51,4.9),createData('Eclair',262,16.0,24,6.0),createData('Frozen yoghurt',159,6.0,24,4.0),createData('Gingerbread',356,16.0,49,3.9),createData('Honeycomb',408,3.2,87,6.5),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Jelly Bean',375,0.0,94,0.0),createData('KitKat',518,26.0,65,7.0),createData('Lollipop',392,0.2,98,0.0),createData('Oreo',437,18.0,63,4.0)];function descendingComparator(a,b,orderBy){if(b[orderBy]<a[orderBy]){return-1;}if(b[orderBy]>a[orderBy]){return 1;}return 0;}function getComparator(order,orderBy){return order==='desc'?function(a,b){return descendingComparator(a,b,orderBy);}:function(a,b){return-descendingComparator(a,b,orderBy);};}function stableSort(array,comparator){var stabilizedThis=array.map(function(el,index){return[el,index];});stabilizedThis.sort(function(a,b){var order=comparator(a[0],b[0]);if(order!==0)return order;return a[1]-b[1];});return stabilizedThis.map(function(el){return el[0];});}var headCells=[{id:'name',numeric:false,disablePadding:true,label:'Dessert'},{id:'calories',numeric:true,disablePadding:false,label:'Calories'},{id:'fat',numeric:true,disablePadding:false,label:'Fat (g)'},{id:'carbs',numeric:true,disablePadding:false,label:'Carbs (g)'},{id:'protein',numeric:true,disablePadding:false,label:'Protein (g)'}];function EnhancedTableHead(props){var classes=props.classes,order=props.order,orderBy=props.orderBy,onRequestSort=props.onRequestSort;var createSortHandler=function createSortHandler(property){return function(event){onRequestSort(event,property);props.logClick(event);props.showJewel();};};return React.createElement(TableHead,null,React.createElement(TableRow,null,headCells.map(function(headCell){return React.createElement(TableCell,{key:headCell.id,align:headCell.numeric?'right':'left',padding:\"10px\",sortDirection:orderBy===headCell.id?order:false,style:{fontWeight:'bold'}},React.createElement(TableSortLabel,{active:true,direction:orderBy===headCell.id?order:'asc',id:\"level 6 cell \"+headCell.id,onClick:createSortHandler(headCell.id)},headCell.label,orderBy===headCell.id?React.createElement(\"span\",{className:classes.visuallyHidden},order==='desc'?'sorted descending':'sorted ascending'):null));})));}var useStyles=makeStyles(function(theme){return{root:{width:'100%'},paper:{width:'100%',marginBottom:theme.spacing(2)},table:{minWidth:750},visuallyHidden:{border:0,clip:'rect(0 0 0 0)',height:1,margin:-1,overflow:'hidden',padding:0,position:'absolute',top:20,width:1}};});export default function EnhancedTable(props){var classes=useStyles();var _React$useState=React.useState('asc'),_React$useState2=_slicedToArray(_React$useState,2),order=_React$useState2[0],setOrder=_React$useState2[1];var _React$useState3=React.useState('dessert'),_React$useState4=_slicedToArray(_React$useState3,2),orderBy=_React$useState4[0],setOrderBy=_React$useState4[1];var handleRequestSort=function handleRequestSort(event,property){var isAsc=orderBy===property&&order==='asc';setOrder(isAsc?'desc':'asc');setOrderBy(property);};return React.createElement(\"div\",{className:classes.root},React.createElement(Paper,{className:classes.paper},React.createElement(TableContainer,null,React.createElement(Table,{className:classes.table,\"aria-labelledby\":\"tableTitle\",\"aria-label\":\"enhanced table\"},React.createElement(EnhancedTableHead,{classes:classes,order:order,orderBy:orderBy,onRequestSort:handleRequestSort,logClick:props.logClick,showJewel:props.showJewel}),React.createElement(TableBody,null,stableSort(rows,getComparator(order,orderBy)).map(function(row,index){var labelId=\"enhanced-table-checkbox-\".concat(index);return React.createElement(TableRow,{hover:true,tabIndex:-1,key:row.name},React.createElement(TableCell,{component:\"th\",id:labelId,scope:\"row\",padding:\"10px\"},row.name),React.createElement(TableCell,{align:\"right\"},row.calories),React.createElement(TableCell,{align:\"right\"},row.fat),React.createElement(TableCell,{align:\"right\"},row.carbs),React.createElement(TableCell,{align:\"right\"},row.protein));}))))));}","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/EnhancedTable.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","Paper","createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","createSortHandler","property","event","logClick","showJewel","headCell","fontWeight","visuallyHidden","useStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","useState","setOrder","setOrderBy","handleRequestSort","isAsc","row","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Donut', 452, 25.0, 51, 4.9),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\n    createData('KitKat', 518, 26.0, 65, 7.0),\n    createData('Lollipop', 392, 0.2, 98, 0.0),\n    createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Dessert' },\n    { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n    { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n    { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n    { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n        props.logClick(event);\n        props.showJewel();\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding='10px'\n                        sortDirection={orderBy === headCell.id ? order : false}\n                        style={{ fontWeight: 'bold' }}\n                    >\n                        <TableSortLabel\n                            active={true}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            id={\"level 6 cell \" + headCell.id}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function EnhancedTable(props) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('dessert');\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            logClick={props.logClick}\n                            showJewel={props.showJewel}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .map((row, index) => {\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={row.name}\n                                        >\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"10px\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}