{"ast":null,"code":"var _jsxFileName = \"/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ForgotPassword.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport axios from \"axios\";\nconst initialValues = {\n  email: ''\n};\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Email is invalid').required('Email is required')\n});\n\nclass ForgotPassword extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClose = () => {\n      this.setState({\n        success: false\n      });\n    };\n\n    this.onSubmit = ({\n      email\n    }) => {\n      console.log(email);\n      axios.post('http://localhost:5050/passwordreset', {\n        email: email\n      }).then(response => {\n        this.setState({\n          showResetLink: true,\n          response: response.data\n        });\n        console.log(response.data);\n      });\n      this.setState({\n        success: true\n      }); // alertService.clear();\n      // accountService.forgotPassword(email)\n      //     .then(() => alertService.success('Please check your email for password reset instructions'))\n      //     .catch(error => alertService.error(error))\n      //     .finally(() => setSubmitting(false));\n    };\n\n    this.state = {\n      success: false,\n      showResetLink: false,\n      response: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      open: this.state.success,\n      autoHideDuration: 5000,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      style: {\n        top: '100px'\n      },\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Success\")), React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, ({\n      errors,\n      touched\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Forgot Password\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"signin-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"javascript:void(0)\",\n      onClick: this.props.changeView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Cancel\")))))), this.state.showResetLink && React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        textAlign: 'center'\n      },\n      href: this.state.response,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Reset Your Password Here\")));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/z0041gm/school/DigitalSkillsAssessment/src/util/ForgotPassword.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","MuiAlert","Snackbar","axios","initialValues","email","validationSchema","object","shape","string","required","ForgotPassword","Component","constructor","handleClose","setState","success","onSubmit","console","log","post","then","response","showResetLink","data","state","render","vertical","horizontal","top","errors","touched","textAlign","props","changeView","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"../css/Level15.css\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport axios from \"axios\";\n\nconst initialValues = {\n    email: ''\n};\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required')\n});\n\nclass ForgotPassword extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            success: false,\n            showResetLink: false,\n            response: '',\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            success: false\n        })\n    }\n\n    onSubmit = ({ email }) => {\n        console.log(email)\n        axios.post('http://localhost:5050/passwordreset', {email: email})\n            .then((response) => {\n                this.setState({\n                    showResetLink: true,\n                    response: response.data\n                })\n                console.log(response.data)\n            });\n        this.setState({\n            success: true,\n        })\n\n        // alertService.clear();\n        // accountService.forgotPassword(email)\n        //     .then(() => alertService.success('Please check your email for password reset instructions'))\n        //     .catch(error => alertService.error(error))\n        //     .finally(() => setSubmitting(false));\n    }\n\n    render() {\n        return (\n            <div>\n                <Snackbar open={this.state.success} autoHideDuration={5000}\n                          anchorOrigin={{vertical: 'top', horizontal: 'right'}} style={{top: '100px'}}\n                          onClose={this.handleClose}>\n                    <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">Success</MuiAlert>\n                </Snackbar>\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={this.onSubmit}>\n                    {({errors, touched}) => (\n                        <Form>\n                            <br/>\n                            <h2 style={{textAlign: 'center'}}>Forgot Password</h2>\n                            <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <Field name=\"email\" type=\"text\"\n                                           className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')}/>\n                                    <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\"/>\n                                </div>\n                                <div>\n                                    <div>\n                                        <button type=\"submit\" className=\"signin-btn\">\n                                            Submit\n                                        </button>\n                                    </div>\n                                    <div>\n                                        <a href='javascript:void(0)' onClick={this.props.changeView}>Cancel</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n                {this.state.showResetLink && (\n                    <div style={{ width: '100%', textAlign: 'center' }}>\n                        <a style={{ textAlign: 'center' }} href={this.state.response}>Reset Your Password Here</a>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}